version: '3.7'

volumes:
  kong_data: {}
  keycloak_data: { }

networks:
  kong-net-db:
    driver: bridge
  kong-backend:
    driver: bridge
  keycloak-net:
    driver: bridge

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    container_name: kong-database
    image: postgres:9.5
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: ${KONG_PG_DATABASE:-kong}
      POSTGRES_USER: ${KONG_PG_USER:-kong}
      POSTGRES_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${KONG_PG_USER:-kong}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net-db
    ports:
      - "5432:5432"
    volumes:
      - kong_data:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migrations:
    container_name: kong-migrations
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations bootstrap
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    networks:
      - kong-net-db
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  kong-migrations-up:
    container_name: kong-migrations-up
    image: "${KONG_DOCKER_TAG:-kong:latest}"
    command: kong migrations up && kong migrations finish
    depends_on:
      - kong-database
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
    secrets:
      - kong_postgres_password
    networks:
      - kong-net-db
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    container_name: kong
    build:
      context: "./kong/"
    image: "kong-oidc:latest"
    user: "${KONG_USER:-kong}"
    depends_on:
      - kong-database
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_CASSANDRA_CONTACT_POINTS: kong-database
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: ${KONG_PG_DATABASE:-kong}
      KONG_PG_HOST: kong-database
      KONG_PG_USER: ${KONG_PG_USER:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PG_PASSWORD_FILE: /run/secrets/kong_postgres_password
      KONG_PLUGINS: "bundled,oidc"
      KONG_LOG_LEVEL: debug
    secrets:
      - kong_postgres_password
    networks:
      - kong-net-db
      - kong-backend
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga"
    networks:
      - kong-net-db
    restart: on-failure
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    container_name: konga
    image: pantsel/konga:latest
    restart: always
    networks:
      - kong-net-db
    environment:
      DB_ADAPTER: postgres
      DB_URI: "postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga"
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"


  #######################################
  # Product APi
  #######################################
  product-backend:
    build:
      context: "./product-backend/"
    image: "product-backend:1.0"
    container_name: "product-backend"
    ports:
      - "8080:8080"
    networks:
      - "kong-backend"

  #######################################
  # Product Frontend webapp
  #######################################
  frontend:
    build:
      context: "./frontend/"
    image: "frontend:1.0"
    container_name: "frontend"
    ports:
      - "3000:81"
    networks:
      - "kong-backend"

  #######################################
  # Keycloak database
  #######################################
  keycloak-db:
    container_name: "keycloak-db"
    image: postgres:9.6
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    networks:
      - keycloak-net
    ports:
      - "25432:5432"
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB:       keycloak
      POSTGRES_USER:     keycloak
      POSTGRES_PASSWORD: password

  #######################################
  # Keycloak auth server
  #######################################
  keycloak:
    container_name: "keycloak"
    image: jboss/keycloak:latest
    depends_on:
      - keycloak-db
    networks:
      - keycloak-net
    ports:
      - "8180:8080"
    environment:
      DB_VENDOR:   POSTGRES
      DB_ADDR:     keycloak-db
      DB_PORT:     5432
      DB_DATABASE: keycloak
      DB_USER:     keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER:     admin
      KEYCLOAK_PASSWORD: admin

secrets:
  kong_postgres_password:
    file: ./POSTGRES_PASSWORD
